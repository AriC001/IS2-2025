<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/sport/proyecto/entidades/Direccion.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/sport/proyecto/entidades/Direccion.java" />
              <option name="originalContent" value="package com.sport.proyecto.entidades;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.*;&#10;&#10;import java.io.Serializable;&#10;&#10;@Getter&#10;@Setter&#10;@ToString&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Builder&#10;&#10;@Entity&#10;@Table(name = &quot;direccion&quot;)&#10;public class Direccion implements Serializable {&#10;  // Atributos&#10;&#10;  @Id&#10;  @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;  private Long id;&#10;&#10;  private String calle;&#10;&#10;  private String numeracion;&#10;&#10;  private String barrio;&#10;&#10;  private String manzanaPiso;&#10;&#10;  private String casaDepartamento;&#10;&#10;  private String referencia;&#10;&#10;  private boolean eliminado;&#10;&#10;  @ManyToOne(fetch = FetchType.LAZY)&#10;  @JoinColumn(name = &quot;localidad_id&quot;)&#10;  private Localidad localidad;&#10;&#10;  public String getDescripcion() {&#10;    StringBuilder sb = new StringBuilder();&#10;    sb.append(calle).append(&quot; &quot;).append(numeracion);&#10;    if (barrio != null &amp;&amp; !barrio.isEmpty()) {&#10;      sb.append(&quot;, Barrio: &quot;).append(barrio);&#10;    }&#10;    if (manzanaPiso != null &amp;&amp; !manzanaPiso.isEmpty()) {&#10;      sb.append(&quot;, Mz/Piso: &quot;).append(manzanaPiso);&#10;    }&#10;    if (casaDepartamento != null &amp;&amp; !casaDepartamento.isEmpty()) {&#10;      sb.append(&quot;, Casa/Depto: &quot;).append(casaDepartamento);&#10;    }&#10;    if (referencia != null &amp;&amp; !referencia.isEmpty()) {&#10;      sb.append(&quot;, Ref: &quot;).append(referencia);&#10;    }&#10;    if (localidad != null) {&#10;      sb.append(&quot;, &quot;).append(localidad.getNombre());&#10;      if (localidad.getDepartamento() != null) {&#10;        sb.append(&quot;, &quot;).append(localidad.getDepartamento().getNombre());&#10;        if (localidad.getDepartamento().getProvincia() != null) {&#10;          sb.append(&quot;, &quot;).append(localidad.getDepartamento().getProvincia().getNombre());&#10;          if (localidad.getDepartamento().getProvincia().getPais() != null) {&#10;            sb.append(&quot;, &quot;).append(localidad.getDepartamento().getProvincia().getPais().getNombre());&#10;          }&#10;        }&#10;      }&#10;    }&#10;    return sb.toString();&#10;  }&#10;}&#10;" />
              <option name="updatedContent" value="package com.sport.proyecto.entidades;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.*;&#10;&#10;import java.io.Serializable;&#10;&#10;@Getter&#10;@Setter&#10;@ToString&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Builder&#10;&#10;@Entity&#10;@Table(name = &quot;direccion&quot;)&#10;public class Direccion implements Serializable {&#10;  // Atributos&#10;&#10;  @Id&#10;  @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;  private Long id;&#10;&#10;  private String calle;&#10;&#10;  private String numeracion;&#10;&#10;  private String barrio;&#10;&#10;  private String manzanaPiso;&#10;&#10;  private String casaDepartamento;&#10;&#10;  private String referencia;&#10;&#10;  private boolean eliminado;&#10;&#10;  @ManyToOne(fetch = FetchType.LAZY)&#10;  @JoinColumn(name = &quot;localidad_id&quot;)&#10;  private Localidad localidad;&#10;&#10;  public String getDescripcion() {&#10;    StringBuilder sb = new StringBuilder();&#10;    sb.append(calle).append(&quot; &quot;).append(numeracion);&#10;    if (barrio != null &amp;&amp; !barrio.isEmpty()) {&#10;      sb.append(&quot;, Barrio: &quot;).append(barrio);&#10;    }&#10;    if (manzanaPiso != null &amp;&amp; !manzanaPiso.isEmpty()) {&#10;      sb.append(&quot;, Mz/Piso: &quot;).append(manzanaPiso);&#10;    }&#10;    if (casaDepartamento != null &amp;&amp; !casaDepartamento.isEmpty()) {&#10;      sb.append(&quot;, Casa/Depto: &quot;).append(casaDepartamento);&#10;    }&#10;    if (referencia != null &amp;&amp; !referencia.isEmpty()) {&#10;      sb.append(&quot;, Ref: &quot;).append(referencia);&#10;    }&#10;    if (localidad != null) {&#10;      sb.append(&quot;, &quot;).append(localidad.getNombre());&#10;      if (localidad.getDepartamento() != null) {&#10;        sb.append(&quot;, &quot;).append(localidad.getDepartamento().getNombre());&#10;        if (localidad.getDepartamento().getProvincia() != null) {&#10;          sb.append(&quot;, &quot;).append(localidad.getDepartamento().getProvincia().getNombre());&#10;          if (localidad.getDepartamento().getProvincia().getPais() != null) {&#10;            sb.append(&quot;, &quot;).append(localidad.getDepartamento().getProvincia().getPais().getNombre());&#10;          }&#10;        }&#10;      }&#10;    }&#10;    return sb.toString();&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>