<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/com/sport/proyecto/controladores/DireccionControlador.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/sport/proyecto/controladores/DireccionControlador.java" />
              <option name="originalContent" value="package com.sport.proyecto.controladores;&#10;&#10;&#10;import com.sport.proyecto.entidades.Departamento;&#10;import com.sport.proyecto.entidades.Direccion;&#10;import com.sport.proyecto.entidades.Localidad;&#10;import com.sport.proyecto.entidades.Provincia;&#10;import com.sport.proyecto.errores.ErrorServicio;&#10;import com.sport.proyecto.servicios.*;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.ui.Model;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import java.util.List;&#10;&#10;@Controller&#10;@RequestMapping(&quot;/direccion&quot;)&#10;public class DireccionControlador {&#10;&#10;  @Autowired&#10;  private DireccionServicio direccionServicio;&#10;  @Autowired&#10;  private PaisServicio paisServicio;&#10;  @Autowired&#10;  private ProvinciaServicio provinciaServicio;&#10;  @Autowired&#10;  private DepartamentoServicio departamentoServicio;&#10;  @Autowired&#10;  private LocalidadServicio localidadServicio;&#10;&#10;  @GetMapping(&quot;&quot;)&#10;  public String listar(Model model){&#10;    model.addAttribute(&quot;direcciones&quot;, direccionServicio.listarDireccionActiva());&#10;    return &quot;views/direcciones&quot;;&#10;  }&#10;&#10;  @GetMapping(&quot;/nuevo&quot;)&#10;  public String nuevo(Model model){&#10;    try{&#10;      model.addAttribute(&quot;direccion&quot;, new Direccion());&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    }catch (ErrorServicio ex){&#10;      model.addAttribute(&quot;error&quot;, ex.getMessage());&#10;      return &quot;redirect:/direccion&quot;;&#10;    }&#10;&#10;  }&#10;&#10;  @PostMapping(&quot;/crear&quot;)&#10;  public String crear(@ModelAttribute(&quot;direccion&quot;) Direccion direccion, Model model) {&#10;    try {&#10;      direccionServicio.crearDireccion(direccion.getCalle(), direccion.getNumeracion(), direccion.getBarrio(), direccion.getManzanaPiso(), direccion.getCasaDepartamento(),&#10;        direccion.getReferencia(), direccion.getLocalidad().getId());&#10;      return &quot;redirect:/direccion&quot;;&#10;    } catch (Exception e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      model.addAttribute(&quot;direccion&quot;, direccion);&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    }&#10;  }&#10;&#10;  @GetMapping(&quot;/editar/{id}&quot;)&#10;  public String editar(@PathVariable Long id, Model model) {&#10;    try {&#10;      Direccion direccion = direccionServicio.buscarDireccion(id);&#10;      model.addAttribute(&quot;direccion&quot;, direccion);&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    } catch (ErrorServicio e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      return &quot;redirect:/direccion&quot;;&#10;    }&#10;  }&#10;&#10;  @PostMapping(&quot;/actualizar/{id}&quot;)&#10;  public String actualizar(@PathVariable Long id, @ModelAttribute(&quot;direccion&quot;) Direccion direccion, Model model) {&#10;    try {&#10;      direccionServicio.modificarDireccion(id, direccion.getCalle(), direccion.getNumeracion(), direccion.getBarrio(), direccion.getManzanaPiso(), direccion.getCasaDepartamento(),&#10;        direccion.getReferencia(), direccion.getLocalidad().getId());&#10;      return &quot;redirect:/direccion&quot;;&#10;    } catch (Exception e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      model.addAttribute(&quot;direccion&quot;, direccion);&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    }&#10;  }&#10;&#10;  @GetMapping(&quot;/eliminar/{id}&quot;)&#10;  public String eliminar(@PathVariable Long id, Model model) {&#10;    try {&#10;      direccionServicio.eliminarDireccion(id);&#10;      return &quot;redirect:/direccion&quot;;&#10;    } catch (ErrorServicio e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      return &quot;redirect:/direccion&quot;;&#10;    }&#10;  }&#10;&#10;  /* ---------- endpoints JSON para selects dependientes ---------- */&#10;&#10;  @GetMapping(&quot;/api/provincias/{paisId}&quot;)&#10;  @ResponseBody&#10;  public ResponseEntity&lt;List&lt;Provincia&gt;&gt; provinciasPorPais(@PathVariable Long paisId) {&#10;    List&lt;Provincia&gt; list = provinciaServicio.buscarProvinciaPorPais(paisId);&#10;    return ResponseEntity.ok(list);&#10;  }&#10;&#10;  @GetMapping(&quot;/api/departamentos/{provinciaId}&quot;)&#10;  @ResponseBody&#10;  public ResponseEntity&lt;List&lt;Departamento&gt;&gt; departamentosPorProvincia(@PathVariable Long provinciaId) {&#10;    List&lt;Departamento&gt; list = departamentoServicio.buscarDepartamentoPorProvincia(provinciaId);&#10;    return ResponseEntity.ok(list);&#10;  }&#10;&#10;  @GetMapping(&quot;/api/localidades/{departamentoId}&quot;)&#10;  @ResponseBody&#10;  public ResponseEntity&lt;List&lt;Localidad&gt;&gt; localidadesPorDepartamento(@PathVariable Long departamentoId) {&#10;    List&lt;Localidad&gt; list = localidadServicio.buscarLocalidadPorDepartamento(departamentoId);&#10;    return ResponseEntity.ok(list);&#10;  }&#10;&#10;}&#10;" />
              <option name="updatedContent" value="package com.sport.proyecto.controladores;&#10;&#10;&#10;import com.sport.proyecto.entidades.Departamento;&#10;import com.sport.proyecto.entidades.Direccion;&#10;import com.sport.proyecto.entidades.Localidad;&#10;import com.sport.proyecto.entidades.Provincia;&#10;import com.sport.proyecto.errores.ErrorServicio;&#10;import com.sport.proyecto.servicios.*;&#10;import org.springframework.beans.factory.annotation.Autowired;&#10;import org.springframework.http.ResponseEntity;&#10;import org.springframework.stereotype.Controller;&#10;import org.springframework.ui.Model;&#10;import org.springframework.web.bind.annotation.*;&#10;&#10;import java.util.List;&#10;&#10;@Controller&#10;@RequestMapping(&quot;/direccion&quot;)&#10;public class DireccionControlador {&#10;&#10;  @Autowired&#10;  private DireccionServicio direccionServicio;&#10;  @Autowired&#10;  private PaisServicio paisServicio;&#10;  @Autowired&#10;  private ProvinciaServicio provinciaServicio;&#10;  @Autowired&#10;  private DepartamentoServicio departamentoServicio;&#10;  @Autowired&#10;  private LocalidadServicio localidadServicio;&#10;&#10;  @GetMapping(&quot;&quot;)&#10;  public String listar(Model model){&#10;    model.addAttribute(&quot;direcciones&quot;, direccionServicio.listarDireccionActiva());&#10;    return &quot;views/direcciones&quot;;&#10;  }&#10;&#10;  @GetMapping(&quot;/nuevo&quot;)&#10;  public String nuevo(Model model){&#10;    try{&#10;      model.addAttribute(&quot;direccion&quot;, new Direccion());&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    }catch (ErrorServicio ex){&#10;      model.addAttribute(&quot;error&quot;, ex.getMessage());&#10;      return &quot;redirect:/direccion&quot;;&#10;    }&#10;&#10;  }&#10;&#10;  @PostMapping(&quot;/crear&quot;)&#10;  public String crear(@ModelAttribute(&quot;direccion&quot;) Direccion direccion, Model model) {&#10;    try {&#10;      direccionServicio.crearDireccion(direccion.getCalle(), direccion.getNumeracion(), direccion.getBarrio(), direccion.getManzanaPiso(), direccion.getCasaDepartamento(),&#10;        direccion.getReferencia(), direccion.getLocalidad().getId());&#10;      return &quot;redirect:/direccion&quot;;&#10;    } catch (Exception e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      model.addAttribute(&quot;direccion&quot;, direccion);&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    }&#10;  }&#10;&#10;  @GetMapping(&quot;/editar/{id}&quot;)&#10;  public String editar(@PathVariable Long id, Model model) {&#10;    try {&#10;      Direccion direccion = direccionServicio.buscarDireccion(id);&#10;      model.addAttribute(&quot;direccion&quot;, direccion);&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    } catch (ErrorServicio e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      return &quot;redirect:/direccion&quot;;&#10;    }&#10;  }&#10;&#10;  @PostMapping(&quot;/actualizar/{id}&quot;)&#10;  public String actualizar(@PathVariable Long id, @ModelAttribute(&quot;direccion&quot;) Direccion direccion, Model model) {&#10;    try {&#10;      direccionServicio.modificarDireccion(id, direccion.getCalle(), direccion.getNumeracion(), direccion.getBarrio(), direccion.getManzanaPiso(), direccion.getCasaDepartamento(),&#10;        direccion.getReferencia(), direccion.getLocalidad().getId());&#10;      return &quot;redirect:/direccion&quot;;&#10;    } catch (Exception e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      model.addAttribute(&quot;direccion&quot;, direccion);&#10;      model.addAttribute(&quot;paises&quot;, paisServicio.listarPaisesActivos());&#10;      model.addAttribute(&quot;provincias&quot;, provinciaServicio.listarProvinciasActivas());&#10;      model.addAttribute(&quot;departamentos&quot;, departamentoServicio.listarDepartamentosActivos());&#10;      model.addAttribute(&quot;localidades&quot;, localidadServicio.listarLocalidadesActivas());&#10;      return &quot;views/direccion-form&quot;;&#10;    }&#10;  }&#10;&#10;  @GetMapping(&quot;/eliminar/{id}&quot;)&#10;  public String eliminar(@PathVariable Long id, Model model) {&#10;    try {&#10;      direccionServicio.eliminarDireccion(id);&#10;      return &quot;redirect:/direccion&quot;;&#10;    } catch (ErrorServicio e) {&#10;      model.addAttribute(&quot;error&quot;, e.getMessage());&#10;      return &quot;redirect:/direccion&quot;;&#10;    }&#10;  }&#10;&#10;  /* ---------- endpoints JSON para selects dependientes ---------- */&#10;&#10;  @GetMapping(&quot;/api/provincias/{paisId}&quot;)&#10;  @ResponseBody&#10;  public ResponseEntity&lt;List&lt;Provincia&gt;&gt; provinciasPorPais(@PathVariable Long paisId) {&#10;    List&lt;Provincia&gt; list = provinciaServicio.buscarProvinciaPorPais(paisId);&#10;    return ResponseEntity.ok(list);&#10;  }&#10;&#10;  @GetMapping(&quot;/api/departamentos/{provinciaId}&quot;)&#10;  @ResponseBody&#10;  public ResponseEntity&lt;List&lt;Departamento&gt;&gt; departamentosPorProvincia(@PathVariable Long provinciaId) {&#10;    List&lt;Departamento&gt; list = departamentoServicio.buscarDepartamentoPorProvincia(provinciaId);&#10;    return ResponseEntity.ok(list);&#10;  }&#10;&#10;  @GetMapping(&quot;/api/localidades/{departamentoId}&quot;)&#10;  @ResponseBody&#10;  public ResponseEntity&lt;List&lt;Localidad&gt;&gt; localidadesPorDepartamento(@PathVariable Long departamentoId) {&#10;    List&lt;Localidad&gt; list = localidadServicio.buscarLocalidadPorDepartamento(departamentoId);&#10;    return ResponseEntity.ok(list);&#10;  }&#10;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/templates/views/direccion-form.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/templates/views/direccion-form.html" />
              <option name="originalContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot; lang=&quot;es&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;/&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&#10;  &lt;title th:text=&quot;${direccion.id} != null ? 'Editar Dirección' : 'Nueva Dirección'&quot;&gt;Dirección&lt;/title&gt;&#10;&#10;  &lt;!-- Bootstrap CSS (CDN) --&gt;&#10;  &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;/&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;&lt;div class=&quot;container mt-4&quot;&gt;&#10;  &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;    &lt;div class=&quot;col-md-8&quot;&gt;&#10;&#10;      &lt;h3 th:text=&quot;${direccion.id} != null ? 'Editar Dirección' : 'Nueva Dirección'&quot;&gt;&lt;/h3&gt;&#10;&#10;      &lt;!-- Mensaje de error general --&gt;&#10;      &lt;div th:if=&quot;${error}&quot; class=&quot;alert alert-danger&quot; th:text=&quot;${error}&quot;&gt;&lt;/div&gt;&#10;&#10;      &lt;!-- FORMULARIO ÚNICO, acción dinámica --&gt;&#10;      &lt;form th:action=&quot;${direccion.id != null} ? @{/direccion/actualizar/{id}(id=${direccion.id})} : @{/direccion/crear}&quot; th:object=&quot;${direccion}&quot; method=&quot;post&quot;&gt;&#10;        &lt;input type=&quot;hidden&quot; th:field=&quot;*{id}&quot;/&gt;&#10;&#10;        &lt;!-- SELECTS DEPENDIENTES (relaciones directas, no ids sueltos) --&gt;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;País *&lt;/label&gt;&#10;          &lt;select id=&quot;paisSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{direccion.localidad.departamento.provincia.pais}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione País --&lt;/option&gt;&#10;            &lt;option th:each=&quot;p : ${paises}&quot; th:value=&quot;${p.id}&quot; th:text=&quot;${p.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Provincia *&lt;/label&gt;&#10;          &lt;select id=&quot;provSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{direccion.localidad.departamento.provincia}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione Provincia --&lt;/option&gt;&#10;            &lt;option th:each=&quot;prov : ${provincias}&quot; th:value=&quot;${prov.id}&quot; th:text=&quot;${prov.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Departamento *&lt;/label&gt;&#10;          &lt;select id=&quot;depSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{direccion.localidad.departamento}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione Departamento --&lt;/option&gt;&#10;            &lt;option th:each=&quot;dep : ${departamentos}&quot; th:value=&quot;${dep.id}&quot; th:text=&quot;${dep.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Localidad *&lt;/label&gt;&#10;          &lt;select id=&quot;locSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{localidad}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione Localidad --&lt;/option&gt;&#10;            &lt;option th:each=&quot;loc : ${localidades}&quot; th:value=&quot;${loc.id}&quot; th:text=&quot;${loc.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;          &lt;div class=&quot;text-danger small&quot; th:errors=&quot;*{localidad}&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;hr&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Calle *&lt;/label&gt;&#10;          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{calle}&quot; placeholder=&quot;Ej: Av. Libertad&quot; required&gt;&#10;          &lt;div class=&quot;text-danger small&quot; th:errors=&quot;*{calle}&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;row&quot;&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Número&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{numeracion}&quot; placeholder=&quot;123&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Barrio&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{barrio}&quot; placeholder=&quot;Centro&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Casa/Depto&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{casaDepartamento}&quot; placeholder=&quot;Ej: 4B&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Manzana/Piso&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{manzanaPiso}&quot; placeholder=&quot;Ej: Mz 5 / 2°&quot;&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Referencia&lt;/label&gt;&#10;          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{referencia}&quot; placeholder=&quot;Frente al parque&quot;&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;d-flex justify-content-between mt-4&quot;&gt;&#10;          &lt;a th:href=&quot;@{/direccion}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancelar&lt;/a&gt;&#10;          &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Guardar&lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/form&gt;&#10;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Bootstrap JS --&gt;&#10;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&#10;&lt;!-- JavaScript sencillo para selects dependientes (fetch a endpoints JSON) --&gt;&#10;&lt;script&gt;&#10;    const apiProvincias = '/direcciones/api/provincias/';     // + paisId&#10;    const apiDepartamentos = '/direcciones/api/departamentos/'; // + provinciaId&#10;    const apiLocalidades = '/direcciones/api/localidades/';   // + departamentoId&#10;&#10;    const paisSelect = document.getElementById('paisSelect');&#10;    const provSelect = document.getElementById('provSelect');&#10;    const depSelect = document.getElementById('depSelect');&#10;    const locSelect = document.getElementById('locSelect');&#10;&#10;    // Helper simple para llenar un select con objetos {id,nombre}&#10;    function llenar(selectEl, items, placeholder) {&#10;        selectEl.innerHTML = '';&#10;        const opt0 = document.createElement('option');&#10;        opt0.value = '';&#10;        opt0.text = placeholder;&#10;        selectEl.appendChild(opt0);&#10;        items.forEach(it =&gt; {&#10;            const o = document.createElement('option');&#10;            o.value = it.id;&#10;            o.text = it.nombre;&#10;            selectEl.appendChild(o);&#10;        });&#10;    }&#10;&#10;    function fetchJson(url) {&#10;        return fetch(url).then(r =&gt; r.ok ? r.json() : Promise.reject(r.statusText));&#10;    }&#10;&#10;    function cargarProvincias(paisId, preProvId) {&#10;        if (!paisId) { llenar(provSelect, [], '-- Seleccione Provincia --'); llenar(depSelect, [], '-- Seleccione Departamento --'); llenar(locSelect, [], '-- Seleccione Localidad --'); return; }&#10;        fetchJson(apiProvincias + paisId).then(list =&gt; {&#10;            llenar(provSelect, list, '-- Seleccione Provincia --');&#10;            if (preProvId) provSelect.value = preProvId;&#10;            if (provSelect.value) cargarDepartamentos(provSelect.value, depSelect.dataset.preId || null);&#10;        }).catch(console.error);&#10;    }&#10;&#10;    function cargarDepartamentos(provId, preDepId) {&#10;        if (!provId) { llenar(depSelect, [], '-- Seleccione Departamento --'); llenar(locSelect, [], '-- Seleccione Localidad --'); return; }&#10;        fetchJson(apiDepartamentos + provId).then(list =&gt; {&#10;            llenar(depSelect, list, '-- Seleccione Departamento --');&#10;            if (preDepId) depSelect.value = preDepId;&#10;            if (depSelect.value) cargarLocalidades(depSelect.value, locSelect.dataset.preId || null);&#10;        }).catch(console.error);&#10;    }&#10;&#10;    function cargarLocalidades(depId, preLocId) {&#10;        if (!depId) { llenar(locSelect, [], '-- Seleccione Localidad --'); return; }&#10;        fetchJson(apiLocalidades + depId).then(list =&gt; {&#10;            llenar(locSelect, list, '-- Seleccione Localidad --');&#10;            if (preLocId) locSelect.value = preLocId;&#10;        }).catch(console.error);&#10;    }&#10;&#10;    // Listeners&#10;    paisSelect.addEventListener('change', () =&gt; cargarProvincias(paisSelect.value, null));&#10;    provSelect.addEventListener('change', () =&gt; cargarDepartamentos(provSelect.value, null));&#10;    depSelect.addEventListener('change', () =&gt; cargarLocalidades(depSelect.value, null));&#10;&#10;    // On load: si venimos de edición y el servidor precargó selects, usamos datos pre guardados en data-pre-id&#10;    document.addEventListener('DOMContentLoaded', () =&gt; {&#10;        const prePais = paisSelect.getAttribute('data-pre-id') || null;&#10;        const preProv = provSelect.getAttribute('data-pre-id') || null;&#10;        const preDep = depSelect.getAttribute('data-pre-id') || null;&#10;        const preLoc = locSelect.getAttribute('data-pre-id') || null;&#10;&#10;        if (prePais) {&#10;            // Si no se precargaron provincias en el modelo, las cargamos por API&#10;            if (provSelect.options.length &lt;= 1) {&#10;                cargarProvincias(prePais, preProv);&#10;            } else {&#10;                if (preProv) provSelect.value = preProv;&#10;                if (preProv &amp;&amp; depSelect.options.length &lt;= 1) cargarDepartamentos(preProv, preDep);&#10;                if (preDep &amp;&amp; locSelect.options.length &lt;= 1) cargarLocalidades(preDep, preLoc);&#10;            }&#10;            paisSelect.value = prePais;&#10;        } else {&#10;            // nuevo: dejar selects vacíos&#10;            llenar(provSelect, [], '-- Seleccione Provincia --');&#10;            llenar(depSelect, [], '-- Seleccione Departamento --');&#10;            llenar(locSelect, [], '-- Seleccione Localidad --');&#10;        }&#10;    });&#10;&lt;/script&gt;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!DOCTYPE html&gt;&#10;&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot; lang=&quot;es&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;/&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;/&gt;&#10;  &lt;title th:text=&quot;${direccion.id} != null ? 'Editar Dirección' : 'Nueva Dirección'&quot;&gt;Dirección&lt;/title&gt;&#10;&#10;  &lt;!-- Bootstrap CSS (CDN) --&gt;&#10;  &lt;link href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;/&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;&lt;div class=&quot;container mt-4&quot;&gt;&#10;  &lt;div class=&quot;row justify-content-center&quot;&gt;&#10;    &lt;div class=&quot;col-md-8&quot;&gt;&#10;&#10;      &lt;h3 th:text=&quot;${direccion.id} != null ? 'Editar Dirección' : 'Nueva Dirección'&quot;&gt;&lt;/h3&gt;&#10;&#10;      &lt;!-- Mensaje de error general --&gt;&#10;      &lt;div th:if=&quot;${error}&quot; class=&quot;alert alert-danger&quot; th:text=&quot;${error}&quot;&gt;&lt;/div&gt;&#10;&#10;      &lt;!-- FORMULARIO ÚNICO, acción dinámica --&gt;&#10;      &lt;form th:action=&quot;${direccion.id != null} ? @{/direccion/actualizar/{id}(id=${direccion.id})} : @{/direccion/crear}&quot; th:object=&quot;${direccion}&quot; method=&quot;post&quot;&gt;&#10;        &lt;input type=&quot;hidden&quot; th:field=&quot;*{id}&quot;/&gt;&#10;&#10;        &lt;!-- SELECTS DEPENDIENTES (relaciones directas, no ids sueltos) --&gt;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;País *&lt;/label&gt;&#10;          &lt;select id=&quot;paisSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{direccion.localidad.departamento.provincia.pais}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione País --&lt;/option&gt;&#10;            &lt;option th:each=&quot;p : ${paises}&quot; th:value=&quot;${p.id}&quot; th:text=&quot;${p.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Provincia *&lt;/label&gt;&#10;          &lt;select id=&quot;provSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{direccion.localidad.departamento.provincia}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione Provincia --&lt;/option&gt;&#10;            &lt;option th:each=&quot;prov : ${provincias}&quot; th:value=&quot;${prov.id}&quot; th:text=&quot;${prov.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Departamento *&lt;/label&gt;&#10;          &lt;select id=&quot;depSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{direccion.localidad.departamento}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione Departamento --&lt;/option&gt;&#10;            &lt;option th:each=&quot;dep : ${departamentos}&quot; th:value=&quot;${dep.id}&quot; th:text=&quot;${dep.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Localidad *&lt;/label&gt;&#10;          &lt;select id=&quot;locSelect&quot; class=&quot;form-select&quot; th:field=&quot;*{localidad}&quot; required&gt;&#10;            &lt;option value=&quot;&quot;&gt;-- Seleccione Localidad --&lt;/option&gt;&#10;            &lt;option th:each=&quot;loc : ${localidades}&quot; th:value=&quot;${loc.id}&quot; th:text=&quot;${loc.nombre}&quot;&gt;&lt;/option&gt;&#10;          &lt;/select&gt;&#10;          &lt;div class=&quot;text-danger small&quot; th:errors=&quot;*{localidad}&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;hr&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Calle *&lt;/label&gt;&#10;          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{calle}&quot; placeholder=&quot;Ej: Av. Libertad&quot; required&gt;&#10;          &lt;div class=&quot;text-danger small&quot; th:errors=&quot;*{calle}&quot;&gt;&lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;row&quot;&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Número&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{numeracion}&quot; placeholder=&quot;123&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Barrio&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{barrio}&quot; placeholder=&quot;Centro&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Casa/Depto&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{casaDepartamento}&quot; placeholder=&quot;Ej: 4B&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;col-md-3 mb-3&quot;&gt;&#10;            &lt;label class=&quot;form-label&quot;&gt;Manzana/Piso&lt;/label&gt;&#10;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{manzanaPiso}&quot; placeholder=&quot;Ej: Mz 5 / 2°&quot;&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;mb-3&quot;&gt;&#10;          &lt;label class=&quot;form-label&quot;&gt;Referencia&lt;/label&gt;&#10;          &lt;input type=&quot;text&quot; class=&quot;form-control&quot; th:field=&quot;*{referencia}&quot; placeholder=&quot;Frente al parque&quot;&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;d-flex justify-content-between mt-4&quot;&gt;&#10;          &lt;a th:href=&quot;@{/direccion}&quot; class=&quot;btn btn-secondary&quot;&gt;Cancelar&lt;/a&gt;&#10;          &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;Guardar&lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/form&gt;&#10;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&lt;/div&gt;&#10;&#10;&lt;!-- Bootstrap JS --&gt;&#10;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;&#10;&#10;&lt;!-- JavaScript sencillo para selects dependientes (fetch a endpoints JSON) --&gt;&#10;&lt;script&gt;&#10;    const apiProvincias = '/direcciones/api/provincias/';     // + paisId&#10;    const apiDepartamentos = '/direcciones/api/departamentos/'; // + provinciaId&#10;    const apiLocalidades = '/direcciones/api/localidades/';   // + departamentoId&#10;&#10;    const paisSelect = document.getElementById('paisSelect');&#10;    const provSelect = document.getElementById('provSelect');&#10;    const depSelect = document.getElementById('depSelect');&#10;    const locSelect = document.getElementById('locSelect');&#10;&#10;    // Helper simple para llenar un select con objetos {id,nombre}&#10;    function llenar(selectEl, items, placeholder) {&#10;        selectEl.innerHTML = '';&#10;        const opt0 = document.createElement('option');&#10;        opt0.value = '';&#10;        opt0.text = placeholder;&#10;        selectEl.appendChild(opt0);&#10;        items.forEach(it =&gt; {&#10;            const o = document.createElement('option');&#10;            o.value = it.id;&#10;            o.text = it.nombre;&#10;            selectEl.appendChild(o);&#10;        });&#10;    }&#10;&#10;    function fetchJson(url) {&#10;        return fetch(url).then(r =&gt; r.ok ? r.json() : Promise.reject(r.statusText));&#10;    }&#10;&#10;    function cargarProvincias(paisId, preProvId) {&#10;        if (!paisId) { llenar(provSelect, [], '-- Seleccione Provincia --'); llenar(depSelect, [], '-- Seleccione Departamento --'); llenar(locSelect, [], '-- Seleccione Localidad --'); return; }&#10;        fetchJson(apiProvincias + paisId).then(list =&gt; {&#10;            llenar(provSelect, list, '-- Seleccione Provincia --');&#10;            if (preProvId) provSelect.value = preProvId;&#10;            if (provSelect.value) cargarDepartamentos(provSelect.value, depSelect.dataset.preId || null);&#10;        }).catch(console.error);&#10;    }&#10;&#10;    function cargarDepartamentos(provId, preDepId) {&#10;        if (!provId) { llenar(depSelect, [], '-- Seleccione Departamento --'); llenar(locSelect, [], '-- Seleccione Localidad --'); return; }&#10;        fetchJson(apiDepartamentos + provId).then(list =&gt; {&#10;            llenar(depSelect, list, '-- Seleccione Departamento --');&#10;            if (preDepId) depSelect.value = preDepId;&#10;            if (depSelect.value) cargarLocalidades(depSelect.value, locSelect.dataset.preId || null);&#10;        }).catch(console.error);&#10;    }&#10;&#10;    function cargarLocalidades(depId, preLocId) {&#10;        if (!depId) { llenar(locSelect, [], '-- Seleccione Localidad --'); return; }&#10;        fetchJson(apiLocalidades + depId).then(list =&gt; {&#10;            llenar(locSelect, list, '-- Seleccione Localidad --');&#10;            if (preLocId) locSelect.value = preLocId;&#10;        }).catch(console.error);&#10;    }&#10;&#10;    // Listeners&#10;    paisSelect.addEventListener('change', () =&gt; cargarProvincias(paisSelect.value, null));&#10;    provSelect.addEventListener('change', () =&gt; cargarDepartamentos(provSelect.value, null));&#10;    depSelect.addEventListener('change', () =&gt; cargarLocalidades(depSelect.value, null));&#10;&#10;    // On load: si venimos de edición y el servidor precargó selects, usamos datos pre guardados en data-pre-id&#10;    document.addEventListener('DOMContentLoaded', () =&gt; {&#10;        const prePais = paisSelect.getAttribute('data-pre-id') || null;&#10;        const preProv = provSelect.getAttribute('data-pre-id') || null;&#10;        const preDep = depSelect.getAttribute('data-pre-id') || null;&#10;        const preLoc = locSelect.getAttribute('data-pre-id') || null;&#10;&#10;        if (prePais) {&#10;            // Si no se precargaron provincias en el modelo, las cargamos por API&#10;            if (provSelect.options.length &lt;= 1) {&#10;                cargarProvincias(prePais, preProv);&#10;            } else {&#10;                if (preProv) provSelect.value = preProv;&#10;                if (preProv &amp;&amp; depSelect.options.length &lt;= 1) cargarDepartamentos(preProv, preDep);&#10;                if (preDep &amp;&amp; locSelect.options.length &lt;= 1) cargarLocalidades(preDep, preLoc);&#10;            }&#10;            paisSelect.value = prePais;&#10;        } else {&#10;            // nuevo: dejar selects vacíos&#10;            llenar(provSelect, [], '-- Seleccione Provincia --');&#10;            llenar(depSelect, [], '-- Seleccione Departamento --');&#10;            llenar(locSelect, [], '-- Seleccione Localidad --');&#10;        }&#10;    });&#10;&lt;/script&gt;&#10;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>